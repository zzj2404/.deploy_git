<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2023/03/06/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>归一化</title>
    <url>/2023/03/06/%E5%BD%92%E4%B8%80%E5%8C%96/</url>
    <content><![CDATA[<h1 id="MinMaxScaler"><a href="#MinMaxScaler" class="headerlink" title="MinMaxScaler"></a>MinMaxScaler</h1><p>$$<br>X_{std}&#x3D;\frac{X - X_{min}}{X_{max}-X_{min}}<br>$$<br>$$<br>X_{scale}&#x3D;\frac{X_{std}}{X_{max}-X_{min}} + X_{min}<br>$$</p>
<h1 id="MaxAbsScaler"><a href="#MaxAbsScaler" class="headerlink" title="MaxAbsScaler"></a>MaxAbsScaler</h1><p>$$<br>X_{scale}&#x3D;\frac{X}{X_{max}}<br>$$</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> MinMaxScaler，MaxAbsScaler</span><br><span class="line"></span><br><span class="line"><span class="comment"># 归一化到 [0,1]</span></span><br><span class="line">scaler = MinMaxScaler(feature_range=(<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 归一化到 [-1,1]</span></span><br><span class="line">scaler = MinMaxScaler(feature_range=(-<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于在一个列表中的单维度值，改变形状为多样本单维度</span></span><br><span class="line">values = values.reshape(-<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">values = scaler.fit_transform(values)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据处理</category>
      </categories>
  </entry>
  <entry>
    <title>utils</title>
    <url>/2023/03/18/%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h2 id="生成幂集"><a href="#生成幂集" class="headerlink" title="生成幂集"></a>生成幂集</h2><p>回溯，[0,1]的幂集都加上2再加自己就是[0,1,2]的幂集</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">subsets</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> [[]]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result = subsets(n-<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> result + [s + [n] <span class="keyword">for</span> s <span class="keyword">in</span> result]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(subsets(<span class="number">2</span>))</span><br><span class="line"><span class="comment"># [[], [1], [2], [1, 2]]</span></span><br></pre></td></tr></table></figure>


<h2 id="提取连续子串的起始终止位置"><a href="#提取连续子串的起始终止位置" class="headerlink" title="提取连续子串的起始终止位置"></a>提取连续子串的起始终止位置</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_list = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">conti_sub_indexs</span>(<span class="params">l</span>):</span><br><span class="line">    n = <span class="built_in">len</span>(l)</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">while</span> i &lt; n:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i,n): </span><br><span class="line">            <span class="keyword">if</span> l[j] != l[i]:</span><br><span class="line">                result.append([i,j-<span class="number">1</span>,l[i]])</span><br><span class="line">                i = j</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result.append([i,n-<span class="number">1</span>,l[i]])</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(conti_sub_indexs(test_list))</span><br><span class="line"><span class="comment"># [[0, 0, 0], [1, 4, 1], [5, 5, 2], [6, 6, 3], [7, 7, 4]]</span></span><br></pre></td></tr></table></figure>

<h1 id="随机颜色"><a href="#随机颜色" class="headerlink" title="随机颜色"></a>随机颜色</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">randomcolor</span>():</span><br><span class="line">    colorArr = [<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;9&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;E&#x27;</span>,<span class="string">&#x27;F&#x27;</span>]</span><br><span class="line">    color = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">        color += colorArr[random.randint(<span class="number">0</span>,<span class="number">14</span>)]</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;#&quot;</span>+color</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>记录</category>
      </categories>
  </entry>
</search>
